name: Run CoopCycle Web

runs:
  using: "composite"
  steps:
  - uses: actions/checkout@v3
    with:
      repository: coopcycle/coopcycle-web
      path: coopcycle-web

  - name: Configure .env variables
    shell: bash
    run: |
      cp .env.dist .env
      sed -i -e 's/CASH_ON_DELIVERY_OPTIN_ENABLED=0/CASH_ON_DELIVERY_OPTIN_ENABLED=1/' .env
    working-directory: coopcycle-web

  - name: Pull Docker images
    shell: bash
    run: docker compose pull --ignore-pull-failures
    working-directory: coopcycle-web
  - name: Prepare OSRM data
    shell: bash
    run: |
      docker compose run -T --rm osrm wget --no-check-certificate https://coopcycle-assets.sfo2.digitaloceanspaces.com/osm/paris-france.osm.pbf -O /data/data.osm.pbf
      docker compose run -T --rm osrm osrm-extract -p /opt/bicycle.lua /data/data.osm.pbf
      docker compose run -T --rm osrm osrm-partition /data/data.osrm
      docker compose run -T --rm osrm osrm-customize /data/data.osrm
    working-directory: coopcycle-web
  # Cypress GitHub Action uses npm ci, and it causes a "permission denied" error,
  # because it tries to remove the node_modules/ folder, which is mounted with root:root
  # We create the node_modules/ folder *BEFORE* starting the containers,
  # so that it can be removed without problems.
  - name: Create node_modules directory
    shell: bash
    run: mkdir node_modules
    working-directory: coopcycle-web
  - name: Start Docker containers
    shell: bash
    run: docker compose up -d
    working-directory: coopcycle-web
  - name: Wait for PHP-FPM
    shell: bash
    run: until docker inspect --format='{{ .State.Health.Status }}' $(docker compose ps -q php) | grep -wq healthy; do sleep 5; done
    working-directory: coopcycle-web
  - name: Wait webpack
    shell: bash
    run: until [ -f "web/build/entrypoints.json" ]; do sleep 5; done
    working-directory: coopcycle-web
  - name: Create database
    shell: bash
    run: docker compose exec -T php bin/console doctrine:schema:create --env=test
    working-directory: coopcycle-web
  - name: Create typesense collections
    shell: bash
    run: docker compose exec -T php bin/console typesense:create --env=test
    working-directory: coopcycle-web
  - name: Setup CoopCycle
    shell: bash
    run: docker compose exec -T php bin/console coopcycle:setup --env=test
    working-directory: coopcycle-web
