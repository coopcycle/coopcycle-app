name: Fastlane iOS
on:
  workflow_call:
    inputs:
      instance:
        type: string
        required: false
      instance_url:
        type: string
        required: false
        default: ""
      app_name:
        type: string
        required: false
      app_id:
        type: string
        required: false
        default: org.coopcycle.CoopCycle
      primary_color:
        type: string
        required: false
        default: ""
      google_service_info_plist_base64:
        type: string
        required: true
jobs:
  FASTLANE_IOS:
    name: Build for iOS
    runs-on: macOS-14
    steps:
      - uses: actions/checkout@v3
      # - uses: maxim-lobanov/setup-xcode@v1
      #   with:
      #     xcode-version: '12.5.1'
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
      # - name: Setup CocoaPods
      #   uses: maxim-lobanov/setup-cocoapods@v1
      #   with:
      #     # version: '1.12'
      #     podfile-path: ios/Podfile.lock
      - name: Install dependencies
        run: yarn install --no-progress --network-timeout 100000 --network-concurrency 1
      - name: Cache Pods
        uses: actions/cache@v2
        id: cache-pods
        with:
          path: ios/Pods
          key: pods-${{ hashFiles('**/Podfile.lock') }}
      - name: Install Pods
        working-directory: ios/
        run: bundle exec pod install
      - name: Generate icons
        if: ${{ inputs.instance != '' }}
        working-directory: ios/
        run: bundle exec fastlane generate_icons
        env:
          APPICON_IMAGE_FILE: "fastlane/metadata-${{ inputs.instance }}/app_icon.png"
      - name: Rename app
        if: ${{ inputs.app_name != '' }}
        working-directory: ios/
        run: bundle exec fastlane rename_app
        env:
          COOPCYCLE_APP_NAME: ${{ inputs.app_name }}
      - name: Decode sentry.properties file
        uses: timheuer/base64-to-file@v1.2
        with:
          fileDir: "./ios/"
          fileName: "sentry.properties"
          encodedString: ${{ secrets.SENTRY_PROPERTIES_BASE64 }}
      - name: Decode google-services.json file
        uses: timheuer/base64-to-file@v1.2
        with:
          fileDir: "./ios/"
          fileName: "GoogleService-Info.plist"
          encodedString: ${{ secrets[inputs.google_service_info_plist_base64] }}
      - name: Create .env file
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          GOOGLE_MAPS_BROWSER_KEY: ${{ secrets.GOOGLE_MAPS_BROWSER_KEY }}
          GOOGLE_MAPS_ANDROID_KEY: ${{ secrets.GOOGLE_MAPS_ANDROID_KEY }}
          TRANSISTORSOFT_LICENSE_KEY: ${{ secrets.TRANSISTORSOFT_LICENSE_KEY }}
          FACEBOOK_APP_ID: ${{ secrets.FACEBOOK_APP_ID }}
          GOOGLE_SIGN_IN_CLIENT_ID: ${{ secrets.GOOGLE_SIGN_IN_CLIENT_ID }}
          DEFAULT_SERVER: ${{ inputs.instance_url }}
          PRIMARY_COLOR: ${{ inputs.primary_color }}
          FACEBOOK_CLIENT_TOKEN: ${{ secrets.FACEBOOK_CLIENT_TOKEN }}
        run: |
          touch .env
          echo COUNTLY_SERVER_URL= >> .env
          echo COUNTLY_APP_KEY= >> .env
          echo COUNTLY_SALT= >> .env
          echo SENTRY_DSN="$SENTRY_DSN" >> .env
          echo GOOGLE_MAPS_BROWSER_KEY="$GOOGLE_MAPS_BROWSER_KEY" >> .env
          echo GOOGLE_MAPS_ANDROID_KEY="$GOOGLE_MAPS_ANDROID_KEY" >> .env
          echo TRANSISTORSOFT_LICENSE_KEY="$TRANSISTORSOFT_LICENSE_KEY" >> .env
          echo FACEBOOK_APP_ID="$FACEBOOK_APP_ID" >> .env
          echo FACEBOOK_CLIENT_TOKEN="$FACEBOOK_CLIENT_TOKEN" >> .env
          echo GOOGLE_SIGN_IN_CLIENT_ID="$GOOGLE_SIGN_IN_CLIENT_ID" >> .env
          echo DEFAULT_SERVER="$DEFAULT_SERVER" >> .env
          echo PRIMARY_COLOR="$PRIMARY_COLOR" >> .env
      # - name: Import Code-Signing Certificates
      #   uses: Apple-Actions/import-codesign-certs@v1
      #   with:
      #     p12-file-base64: ${{ secrets.IOS_DIST_SIGNING_KEY }}
      #     p12-password: ${{ secrets.IOS_DIST_SIGNING_KEY_PASSWORD }}
      - name: Run Fastlane
        working-directory: ios/
        run: bundle exec fastlane deploy
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY: ${{ secrets.ASC_KEY }}
          # https://github.com/fastlane/fastlane/issues/14418
          # KEYCHAIN_PATH: /Users/runner/Library/Keychains/signing_temp.keychain-db
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          DELIVER_APP_IDENTIFIER: ${{ inputs.app_id }}
          GIT_AUTHORIZATION: ${{ secrets.GIT_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      - name: Show error log
        if: failure()
        run: cat /Users/runner/Library/Logs/gym/CoopCycle-CoopCycle.log
      - name: Upload IPA artifact
        uses: actions/upload-artifact@v3
        with:
          name: example-iOS.ipa
          path: ios/example-iOS.ipa
